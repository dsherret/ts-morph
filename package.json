{
  "name": "ts-morph",
  "version": "3.1.3",
  "description": "TypeScript compiler wrapper for static analysis and code manipulation.",
  "main": "dist/main.js",
  "typings": "dist-declarations/ts-morph.d.ts",
  "scripts": {
    "dopublish": "yarn type-check-docs && yarn package && yarn publish-code-verification && echo \"Run: npm publish --otp\"",
    "build": "rimraf dist && ttsc && ts-node --transpile-only scripts/build/removeEmptyFiles",
    "build:declarations": "rimraf dist-declarations && ts-node --transpile-only scripts/generation/main create-code-block-writer-file create-declaration-file",
    "format": "dprint \"**/*{.ts,.json}\" \"!lib/*.ts\"",
    "test": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" mocha --opts mocha.opts",
    "test:debug": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" mocha --opts mocha.opts --inspect-brk",
    "test:watch": "yarn test --watch-extensions ts --watch",
    "test:ts-versions": "ts-node --transpile-only scripts/test/testTypeScriptVersions",
    "test:coverage": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" nyc --reporter=lcov mocha --opts mocha.opts",
    "test:performance": "yarn build && node ./dist/tests/performance/run.js",
    "test:performance-save": "yarn test:performance --save",
    "type-check-library": "ts-node --transpile-only scripts/typeCheckLibrary",
    "type-check-scripts": "tsc --noEmit --project tsconfig.scripts.json",
    "code-generate": "ts-node --transpile-only --compiler ttypescript scripts/generation/main",
    "refactor": "ts-node --transpile-only scripts/refactor",
    "output-wrapped-nodes": "ts-node --transpile-only scripts/generation/outputWrappedNodesInfo",
    "package": "yarn build && yarn build:declarations",
    "publish-code-verification": "yarn code-verification && yarn ensure-no-declaration-file-errors && yarn ensure-declaration-files-not-changed",
    "code-verification": "ts-node --transpile-only scripts/verification/main ensure-structures-match-classes ensure-overload-structures-match ensure-array-inputs-readonly ensure-classes-implement-structure-methods ensure-mixin-not-applied-multiple-times validate-public-api-class-member-names validate-compiler-node-to-wrapped-type validate-code-fences",
    "ensure-structures-match-classes": "ts-node --transpile-only scripts/verification/main ensure-structures-match-classes",
    "ensure-overload-structures-match": "ts-node --transpile-only scripts/verification/main ensure-overload-structures-match",
    "ensure-no-project-compile-errors": "ts-node --transpile-only scripts/verification/ensureNoProjectCompileErrors",
    "ensure-no-declaration-file-errors": "ts-node --transpile-only scripts/verification/ensureNoDeclarationFileErrors",
    "ensure-declaration-files-not-changed": "ts-node --transpile-only scripts/verification/ensureDeclarationFilesNotChanged",
    "ensure-array-inputs-readonly": "ts-node --transpile-only scripts/verification/main ensure-array-inputs-readonly",
    "ensure-or-throw-exists": "ts-node --transpile-only scripts/verification/main ensure-or-throw-exists",
    "overwrite-declaration-files": "yarn build:declarations && shx cp -rf dist-declarations/ts-morph.d.ts lib/ts-morph.d.ts && shx cp -rf dist-declarations/code-block-writer.d.ts lib/code-block-writer.d.ts",
    "type-check-docs": "ts-node --transpile-only scripts/typeCheckDocumentation.ts"
  },
  "repository": "git+https://github.com/dsherret/ts-morph.git",
  "keywords": [
    "typescript",
    "ast",
    "static analysis",
    "code generation",
    "code refactor"
  ],
  "author": "David Sherret",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dsherret/ts-morph/issues"
  },
  "homepage": "https://github.com/dsherret/ts-morph#readme",
  "nyc": {
    "extension": [
      ".ts",
      ".tsx"
    ],
    "include": [
      "src/**/*.ts",
      "!src/tests/**/*.ts",
      "!src/utils/TypeGuards.ts",
      "!src/structures/utils/forEachStructureChild.ts",
      "!src/structures/utils/StructureTypeGuards.ts"
    ],
    "reporter": [
      "html"
    ],
    "all": true
  },
  "typescript": {
    "definition": "dist-declarations/ts-morph.d.ts"
  },
  "dependencies": {
    "@dsherret/to-absolute-glob": "^2.0.2",
    "code-block-writer": "9.4.1",
    "fs-extra": "^8.1.0",
    "glob-parent": "^5.0.0",
    "globby": "^10.0.1",
    "is-negated-glob": "^1.0.0",
    "multimatch": "^4.0.0",
    "typescript": "^3.0.1"
  },
  "devDependencies": {
    "@types/chai": "^4.1.7",
    "@types/diff": "^4.0.2",
    "@types/fs-extra": "^8.0.0",
    "@types/glob-parent": "^3.1.1",
    "@types/globby": "^9.1.0",
    "@types/is-negated-glob": "^1.0.0",
    "@types/mocha": "^5.2.7",
    "@types/multimatch": "^4.0.0",
    "@types/node": "^12.6.9",
    "@types/ts-nameof": "^3.2.0",
    "chai": "^4.2.0",
    "chalk": "^2.4.2",
    "conditional-type-checks": "^1.0.1",
    "coveralls": "^3.0.5",
    "cross-env": "^5.2.0",
    "diff": "^4.0.1",
    "dprint": "^0.3.0",
    "mocha": "6.2.0",
    "nyc": "14.1.1",
    "rimraf": "^2.6.3",
    "shelljs": "^0.8.3",
    "shx": "^0.3.2",
    "source-map-support": "^0.5.13",
    "ts-morph": "3.1.3",
    "ts-nameof": "^3.2.0",
    "ts-node": "8.3.0",
    "ttypescript": "1.5.7",
    "typescript": "3.5.3",
    "typescript-3.0.1": "npm:typescript@3.0.1",
    "typescript-3.0.3": "npm:typescript@3.0.3",
    "typescript-3.1.6": "npm:typescript@3.1.6",
    "typescript-3.2.4": "npm:typescript@3.2.4",
    "typescript-3.3.3": "npm:typescript@3.3.3",
    "typescript-3.4.5": "npm:typescript@3.4.5"
  },
  "standard-version": {
    "tagPrefix": ""
  },
  "browser": {
    "fs": false,
    "os": false,
    "fs.realpath": false,
    "fs-extra": false,
    "dir-glob": false,
    "graceful-fs": false,
    "fast-glob": false,
    "source-map-support": false,
    "globby": false,
    "glob-parent": false,
    "glob": false
  }
}
