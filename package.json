{
  "name": "ts-morph",
  "version": "1.3.2",
  "description": "TypeScript compiler wrapper for static analysis and code manipulation.",
  "main": "dist/main.js",
  "typings": "dist-declarations/ts-morph.d.ts",
  "scripts": {
    "dopublish": "yarn run type-check-docs && yarn run package && yarn run publish-code-verification && npm publish --otp",
    "lint": "yarn run lint-src && yarn run lint-scripts",
    "lint-src": "tslint \"src/**/*.ts\"",
    "lint-scripts": "tslint \"scripts/**/*.ts\"",
    "lint-src-and-fix": "tslint \"src/**/*.ts\" --fix",
    "build": "rimraf dist && npx ttsc && ts-node --transpileOnly scripts/build/removeEmptyFiles",
    "build-declarations": "rimraf dist-declarations && ts-node --max-old-space-size=8192 --transpileOnly scripts/generation/main create-code-block-writer-file create-declaration-file",
    "test": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" mocha --opts mocha.opts --grep \"^(?!.*@performance)\"",
    "test-debug": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" mocha --opts mocha.opts --grep \"^(?!.*@performance)\" --inspect-brk",
    "test-watch": "npm test -- --watch-extensions ts --watch",
    "test-ts-versions": "ts-node --transpileOnly scripts/test/testTypeScriptVersions",
    "test-coverage": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" nyc --reporter=lcov mocha --opts mocha.opts --grep \"^(?!.*performance)\"",
    "test-performance": "cross-env TS_NODE_COMPILER=\"ttypescript\" TS_NODE_TRANSPILE_ONLY=\"true\" mocha --opts mocha.opts --grep @performance --reporter spec",
    "type-check-library": "ts-node --transpileOnly scripts/typeCheckLibrary",
    "code-generate": "ts-node --transpileOnly --compiler ttypescript scripts/generation/main",
    "refactor": "ts-node --transpileOnly scripts/refactor",
    "output-wrapped-nodes": "ts-node --transpileOnly scripts/generation/outputWrappedNodesInfo",
    "package": "yarn run build && yarn run build-declarations",
    "publish-code-verification": "yarn run code-verification && yarn run ensure-no-declaration-file-errors && yarn run ensure-declaration-files-not-changed",
    "code-verification": "ts-node --transpileOnly scripts/verification/main ensure-structures-match-classes ensure-overload-structures-match ensure-array-inputs-readonly ensure-classes-implement-structure-methods ensure-mixin-not-applied-multiple-times validate-public-api-class-member-names validate-compiler-node-to-wrapped-type validate-code-fences",
    "ensure-structures-match-classes": "ts-node --transpileOnly scripts/verification/main ensure-structures-match-classes",
    "ensure-overload-structures-match": "ts-node --transpileOnly scripts/verification/main ensure-overload-structures-match",
    "ensure-no-project-compile-errors": "ts-node --transpileOnly scripts/verification/ensureNoProjectCompileErrors",
    "ensure-no-declaration-file-errors": "ts-node --transpileOnly scripts/verification/ensureNoDeclarationFileErrors",
    "ensure-declaration-files-not-changed": "ts-node --transpileOnly scripts/verification/ensureDeclarationFilesNotChanged",
    "ensure-array-inputs-readonly": "ts-node --transpileOnly scripts/verification/main ensure-array-inputs-readonly",
    "ensure-or-throw-exists": "ts-node --transpileOnly scripts/verification/main ensure-or-throw-exists",
    "overwrite-declaration-files": "yarn run build-declarations && shx cp -rf dist-declarations/ts-morph.d.ts lib/ts-morph.d.ts && shx cp -rf dist-declarations/code-block-writer.d.ts lib/code-block-writer.d.ts",
    "type-check-docs": "ts-node --transpileOnly scripts/typeCheckDocumentation.ts",
    "maintain-barrels": "barrel-maintainer src"
  },
  "repository": "git+https://github.com/dsherret/ts-morph.git",
  "keywords": [
    "typescript",
    "ast",
    "static analysis",
    "code generation",
    "code refactor"
  ],
  "author": "David Sherret",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dsherret/ts-morph/issues"
  },
  "homepage": "https://github.com/dsherret/ts-morph#readme",
  "nyc": {
    "extension": [
      ".ts",
      ".tsx"
    ],
    "include": [
      "src/**/*.ts",
      "!src/tests/**/*.ts",
      "!src/utils/TypeGuards.ts"
    ],
    "reporter": [
      "html"
    ],
    "all": true
  },
  "typescript": {
    "definition": "dist-declarations/ts-morph.d.ts"
  },
  "dependencies": {
    "@dsherret/to-absolute-glob": "^2.0.2",
    "code-block-writer": "7.3.0",
    "fs-extra": "^7.0.0",
    "glob-parent": "^3.1.0",
    "globby": "^8.0.1",
    "is-negated-glob": "^1.0.0",
    "multimatch": "^2.1.0",
    "typescript": "^3.0.1"
  },
  "devDependencies": {
    "@types/chai": "^4.1.2",
    "@types/diff": "^3.5.1",
    "@types/fs-extra": "^5.0.2",
    "@types/glob-parent": "^3.1.0",
    "@types/is-negated-glob": "^1.0.0",
    "@types/mocha": "^5.2.0",
    "@types/multimatch": "^2.1.2",
    "@types/node": "^6.0.110",
    "@types/ts-nameof": "^2.0.0",
    "barrel-maintainer": "^1.4.0",
    "chai": "^4.1.2",
    "chalk": "^2.4.0",
    "conditional-type-checks": "^1.0.0",
    "coveralls": "^3.0.1",
    "cross-env": "^5.1.4",
    "diff": "^3.5.0",
    "mocha": "5.2.0",
    "npx": "^10.2.0",
    "nyc": "12.0.2",
    "rimraf": "^2.6.2",
    "shelljs": "^0.8.2",
    "shx": "^0.3.2",
    "source-map-support": "^0.5.5",
    "ts-morph": "1.3.3",
    "ts-nameof": "^3.0.3",
    "ts-node": "7.0.0",
    "tslint": "^5.11.0",
    "ttypescript": "1.5.5",
    "typescript": "3.4.3",
    "typescript-3.0.1": "npm:typescript@3.0.1",
    "typescript-3.0.3": "npm:typescript@3.0.3",
    "typescript-3.1.6": "npm:typescript@3.1.6",
    "typescript-3.2.4": "npm:typescript@3.2.4",
    "typescript-3.3.3": "npm:typescript@3.3.3",
    "typescript-3.4.3": "npm:typescript@3.4.3"
  },
  "standard-version": {
    "tagPrefix": ""
  },
  "browser": {
    "fs": false,
    "os": false,
    "fs.realpath": false,
    "fs-extra": false,
    "dir-glob": false,
    "graceful-fs": false,
    "fast-glob": false,
    "source-map-support": false,
    "globby": false,
    "glob-parent": false,
    "glob": false
  }
}
